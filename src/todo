 + фиксы некоторых графических форматов файлов (проект BALLS);
 + некоторые зарезервированные переменные;
   Итог:  0.2.0;
 + глобальный рефакторинг кода;
   Итог: 0.3.1;

  ------------ вы находитесь здесь ----------------

ОПТИМИЗИРОВАТЬ: добавить методы getNewIntValue, getNewStringValue в ClassTreeNode и operations/base.js;
добавить различные типы для стека (pushInt, pushString); в VmContext и все файлы каталога operations;
уже сделано: пик различных типов операндов в executeCode и Bytecode;

 + реализация графики (проектирование структуры схемы, визуальная состаляющая);
 - функциональная реализация графики;
 - реализация контролов (через IText), их функций и сообщений;
 - тест квадратного уравнения;
   Итог: 0.4.0;

 - реализовать API
    Итог: 1.0.0 (запускаются мячики, но не работает Register).

 - переписать код чтения VDR и VarsFile. ClassData тоже стоило бы (через switch);
 - реализовать нормальный способ сообщений об ошибках при считывании;
    Итог: 1.1.0

 - Возможно поправить алгоритм присвоения Z для соответствия с стратумом;
 - имидж DragObjects;
    Итог: 1.2.0

 - разобраться с флагами;

И общие задачи:
 - в VarsFile убрать зависимость от Map<ClassData>. Это бесполезно.
 - почистить any везде где есть;
 - навести порядок с ошибками.
 - не использовать map-ы где можно обойтись обычным find

Что оптимизировать (номера проблемных строк кода):
 - get/set new/old varValue (в классах использовать маппинг индексов переменных и ссылки на глобальный стор переменных, вместо простой ссылки на объект);
 - getVarId;
 - stackPush;
 - SendMessage, попробовать физически связать переменные вместо копирования;
