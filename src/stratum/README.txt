------ Объяснение структуры каталогов. ------

Общие понятия:

Всего в проекте 5 корневых каталогов. Каждый их них символизирует обособленный от других модуль:
 - helpers;
 - common;
 - vm;
 - classTree;
 - graphics;

Что также нужно знать:
 - Если файл в одном корневом каталоге ссылается на другие файлы в этом же корневом каталоге -
используется относительная ссылка. Если он ссылается на другой модуль - то абсолютная ("~/").

Например, vm/operations/base.ts ссылается на vm/executionContext вот так:

`import { executionContext } from "../executionContext"`.

А vm/parseBytecode ссылается на находящийся в другом корневом каталоге helpers/BinaryStream вот так:

`import { BinaryStream } from "~/helpers/binaryStream"`;

------ Описание каталогов. ------

Каталоги перечислены в порядке уменьшения количества зависимостей друг от друга:

 - helpers - независимый каталог, содержит достаточно независимую от предметной области функциональность,
которая может быть использована в других проектах.

 - common - зависимости, используемые несколькими модулями сразу, или не подходящие по смыслу к другим модулям.
Зависит от: helpers.

 - vm - функциональность виртуальной машины. Включает в себя парсер и интерпретатор кода.
Предоставляет интерфейсы (см `vm/interfaces`).
Зависит от: helpers, common.

 - graphics - очень много чего содержит.
Зависит от: helpers, common, vm.

- classTree - код для построения дерева имиджей и управления памятью их переменных.
Зависит от: helpers, common, vm, filesystem